context:
  version: "3.4.0"
  # cmake/llvm-hash.txt
  llvm_commit: 8957e64a20fc7f4277565c6cfe3e555c119783ce
  build_number: 1

package:
  name: triton
  version: ${{ version }}

source:
  - url: https://github.com/triton-lang/triton/releases/download/v${{ version }}/triton-${{ version }}.tar.gz
    sha256: 019221ceede5ed482b1856c7e47dc8c88eb7a6d1c187ffa70c0875d86c62ed17
    patches:
      - patches/0001-Remove-Werror-that-cause-false-positive-build-failur.patch
      # uncomment if we decide to link dynamically again
      # - patches/0002-Do-not-link-directly-to-LLVM-static-libraries.patch
      - patches/0003-Use-system-PATH-to-find-tools-in-CONDA_PREFIX.patch
      # https://github.com/conda-forge/pytorch-cpu-feedstock/issues/317#issuecomment-2585460619
      - patches/0004-Add-conda-forge-include-dirs-to-list-of-include-dirs.patch
      # backport (relevant parts of) https://github.com/triton-lang/triton/pull/6928
      - patches/0005-fixes-definition-of-PY_SSIZE_T_CLEAN-macro.patch
      # backport (relevant parts of) https://github.com/triton-lang/triton/pull/7695
      - patches/0006-Add-python-3.14-wheel-build-7695.patch
  - url: https://github.com/llvm/llvm-project/archive/${{ llvm_commit }}.tar.gz
    sha256: ce58b941eb8a4495c6797d0c891c18a201e832b7dbd2ab8007d827d27b36f5ce
    target_directory: llvm-project

build:
  number: ${{ build_number }}
  string: cuda${{ cuda_compiler_version | version_to_buildstring }}py${{ python | version_to_buildstring }}h${{ hash }}_${{ build_number }}
  # TODO: CPU-only support still under development
  # No success enabling Windows build as of 3.1.0:
  # https://github.com/conda-forge/triton-feedstock/pull/29#issuecomment-2564371725
  skip: win or cuda_compiler_version in ("None", "11.8")

requirements:
  build:
    - ${{ compiler('cxx') }}
    - ${{ compiler('cuda') }}
    - ${{ stdlib('c') }}
    - ninja
    - cmake
    - if: win
      then: m2-sed
      else: sed
    - if: build_platform != target_platform
      then:
        - python
        - cross-python_${{ target_platform }}
  host:
    - python
    - pybind11
    - pip
    - setuptools
    - zlib
    - zstd  # for llvm
    - nlohmann_json
    - cuda-cupti-dev
    - cuda-version ${{ cuda_compiler_version }}.*
  run:
    - python
    - setuptools
    - if: match(python, "<3.10")
      then: importlib-metadata
    - cuda-nvcc-tools
    - cuda-cuobjdump
    - cuda-cudart
    - cuda-cupti

tests:
  - if: build_platform == target_platform
    then:
      - python:
          imports:
            - triton
            - triton._C.libtriton
          pip_check: true
      - files:
          source:
            - python/test/
        requirements:
          run:
            - pip
            - pytest
            - scipy
        script:
          # test suite essentially depends on availability of a physical GPU,
          # see https://github.com/triton-lang/triton/issues/466;
          # run a test that does not require a GPU but checks
          # if triton.compile() works
          - pytest -v python/test/unit/tools/test_aot.py::test_ttgir_to_ptx

about:
  license: MIT
  license_file: LICENSE
  summary: Development repository for the Triton language and compiler
  description: |
    This is the development repository of Triton, a language and compiler for writing highly efficient custom Deep-Learning primitives.
    The aim of Triton is to provide an open-source environment to write fast code at higher productivity than CUDA, but also with higher flexibility than other existing DSLs.
  homepage: https://github.com/triton-lang/triton
  repository: https://github.com/triton-lang/triton
  documentation: https://triton-lang.org/

extra:
  recipe-maintainers:
    - h-vetinari
    - mgorny
